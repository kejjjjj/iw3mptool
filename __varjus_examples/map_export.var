
fn CM_WriteHeader()
{
    let f = "";
    f += "iwmap 4\n";
    f += "\"000_Global\" flags  active\n";
    f += "\"The Map\" flags\n";
    f += "// entity 0\n{\n";
    f += "\"contrastGain\" " + "\"0.125\"" + '\n';
    f += "\"diffusefraction\" " + "\"0.5\"" + '\n';
    f += "\"_color\" " + "\"0.2 0.27 0.3 1\"" + '\n';
    f += "\"sunlight\" " + "\"1\"" + '\n';
    f += "\"sundirection\" " + "\"-30 -95 0\"" + '\n';
    f += "\"sundiffusecolor\" " + "\"0.2 0.27 0.3 1\"" + '\n';
    f += "\"suncolor\" " + "\"0.2 0.27 0.3 1\"" + '\n';
    f += "\"ambient\" " + "\".1\"" + '\n';
    f += "\"bouncefraction\" " + "\".7\"" + '\n';
    f += "\"classname\" \"worldspawn\"\n";

    return f;
}

fn CM_WriteBrush(brush, index)
{
	let str = `// brush ${index}\n{\n`;

	for(const tri : brush.triangles){
		str += ` ( ${tri.points[0][0]} ${tri.points[0][1]} ${tri.points[0][2]} ) `;
		str += ` ( ${tri.points[1][0]} ${tri.points[1][1]} ${tri.points[1][2]} ) `;
		str += ` ( ${tri.points[2][0]} ${tri.points[2][1]} ${tri.points[2][2]} ) `;
		str += tri.material === "N/A" ? "caulk" : tri.material;
		str += " 128 128 0 0 0 0 lightmap_gray 16384 16384 0 0 0 0\n";
	} 

	str += "}\n";

	return str;
}

fn CM_WriteTerrain(terrain, index)
{
	const writeTriangle = (tri, idx) => {
		let str = `// brush ${idx}\n {\n`;
		str += "  mesh\n  {\n";
		str += `   ${terrain.material === "N/A" ? "caulk" : terrain.material}\n`;
		str += "   lightmap_gray\n";
		str += "   smoothing smoothing_hard\n";
		str += "   2 2 16 8\n";
		str += "   (\n";
		str += `    v ${tri.points[0][0]} ${tri.points[0][1]} ${tri.points[0][2]} t -5760 5824 -46 54\n`;
		str += `    v ${tri.points[1][0]} ${tri.points[1][1]} ${tri.points[1][2]} t -5760 5824 -46 54\n`;
		str += "   )\n";
		str += "   (\n";
		str += `    v ${tri.points[2][0]} ${tri.points[2][1]} ${tri.points[2][2]} t -5760 5824 -46 54\n`;
		str += `    v ${tri.points[2][0]} ${tri.points[2][1]} ${tri.points[2][2]} t -5760 5824 -46 54\n`;
		str += "   )\n  }\n }\n";

		return str;
	};

	let str = "";

	for(const tri : terrain.triangles)
		str += writeTriangle(tri, index);

	return str;
}

fn CM_WriteModel(model, index)
{
	let str = `// entity ${index}\n{\n`;
	str += `"angles" "${model.angles[0]} ${model.angles[1]} ${model.angles[2]}"\n`;
	str += `"modelscale" "${model.modelscale}"\n`;
	str += `"origin" "${model.origin[0]} ${model.origin[1]} ${model.origin[2]}"\n`;
	str += `"model" "${model.name}"\n`;
	str += `"classname" "misc_model"\n`;
	str += "}\n";

	return str;

}

fn main()
{
    
	const dest = global.game_directory + "\\export.map";
	let mapData = CM_WriteHeader();

	let index = 0;

	for(const brush : world.brushes)
		mapData += CM_WriteBrush(brush, index++);

	for(const terrain : world.terrain)
		mapData += CM_WriteTerrain(terrain, index++);

	index = 1;
	mapData += "}\n";

	for(const model : world.models)
		mapData += CM_WriteModel(model, index++);

	fs.write(dest, mapData);

	printlnbold("^2the map has been exported!");
    return 1;
}